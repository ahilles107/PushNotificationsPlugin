{% extends 'NewscoopNewscoopBundle::admin_layout.html.twig' %}

{% block admin_stylesheets %}
<link rel="stylesheet" href="{{ asset('/bundles/newscoopnewscoop/css/jquery.dynatable.css') }}">
<link rel="stylesheet" href="{{ asset('/admin-style/action_buttons.css') }}">
<link rel="stylesheet" href="{{ asset('/bundles/ahsadvertsplugin/css/backend.css') }}">
<style type="text/css" media="screen">
    #notifications-table {padding: 10px;border: 1px solid #ccc;}
    #notifications-table th {background: #007fb3;color: #fff;}
    #notifications-table .glyphicon{font-size: 1.50em;}
    #notifications-table tr.status-0 td{background-color: #f0ad4e; color: #FFF;}
    #notifications-table tr.status-8 td{background-color: #d9534f; color: #FFF;}
    #notifications-table tr.status-8 a, #notifications-table tr.status-0 td a {color: #FFF;}
    a.action-btn {margin-left: 5px; margin-bottom: 5px;}
</style>
{% endblock %}

{% block admin_title %}{{ parent() }} - PushNotifications Admin{% endblock %}

{% block admin_page_title_box %}
<div class="toolbar row">
    <span class="article-title">PushNotifications Admin</span>
    <div class="pull-right">
        <div class="actions">
            <ul class="navigation" style="height: auto;">
                <li>
                    <a class="add" href="{{ url('ahs_pushnotificationsplugin_notification_create')}}">Add new notification</a>
                </li>
            </ul>
        </div>
    </div>
</div>
{% endblock %}

{% block admin_scripts %}
<script src="{{ asset('/js/select2/select2.js') }}"></script>
<script src="{{ asset('/bundles/newscoopnewscoop/js/jquery.dynatable.js') }}"></script>
{% endblock %}

{% block admin_content %}
<div class="plugin-container">
    <table id="notifications-table" class="table table-bordered table-hover table-striped" style="word-wrap: break-word;table-layout: fixed;">
    <thead>
      <tr>
        <th data-dynatable-column="title">Title</th>
        <th style="width: 165px" data-dynatable-column="content">Content</th>
        <th data-dynatable-column="application">Application</th>
        <th data-dynatable-column="userId">User</th>
        <th data-dynatable-column="createdAt">Created date</th>
        <th data-dynatable-column="publishDate">Publish date</th>
        <th data-dynatable-column="status">Status</th>
        <th data-dynatable-column="recipients">Recipients number</th>
        {% if hasPermission('plugin_pushnotifications_publish') or hasPermission('plugin_pushnotifications_manage') %}
        <th style="width: 116px;">{{ 'ads.table.actions.actions'|trans }}</th>
        {% endif %}
      </tr>
    </thead>
    <tbody>
    </tbody>
    </table>
</div>

<script type="text/javascript">


  function formatDate(d){
    // padding function
    var s = function(a,b){return(1e15+a+"").slice(-b)};

    // default date parameter
    if (typeof d === 'undefined'){
        d = new Date();
    };

    // return ISO datetime
    return d.getFullYear() + '-' +
        s(d.getMonth()+1,2) + '-' +
        s(d.getDate(),2) + ' ' +
        s(d.getHours(),2) + ':' +
        s(d.getMinutes(),2) + ':' +
        s(d.getSeconds(),2);
  }

  var dynatable = $('#notifications-table').bind('dynatable:init', function (e, dynatable) {}).dynatable({
    inputs: {
        paginationClass: 'pagination',
        paginationActiveClass: 'current',
        paginationDisabledClass: 'unavailable',
        paginationPrev: '&laquo;',
        paginationNext: '&raquo;',
        pageText: '{{ 'dynatable.page'|trans({},'helpers') }}',
        perPageText: '{{ 'dynatable.perPageText'|trans({},'helpers') }}',
        pageText: '{{ 'dynatable.pageText'|trans({},'helpers') }}',
        recordCountPageBoundTemplate: '{{ 'dynatable.recordCountPageBoundTemplate'|trans({},'helpers') }}',
        recordCountPageUnboundedTemplate: '{{ 'dynatable.recordCountPageUnboundedTemplate'|trans({},'helpers') }}',
        recordCountFilteredTemplate: '{{ 'dynatable.recordCountFilteredTemplate'|trans({},'helpers') }}',
        recordCountText: '{{ 'dynatable.recordCountText'|trans({},'helpers') }}',
        processingText: '{{ 'dynatable.processingText'|trans({},'helpers') }}'
    },
    dataset: {
        ajax: true,
        ajaxUrl: Routing.generate('ahs_pushnotificationsplugin_notification_load'),
        ajaxOnLoad: false,
        records: [],
        perPageDefault: 10,
        perPageOptions: [10,20,50,100],
    },
    features: {
        paginate: true,
    },
    writers: {
        _rowWriter: function defaultRowWriter(rowIndex, record, columns, cellWriter) {
            var tr = '';

            // grab the record's attribute for each column
            for (var i = 0, len = columns.length; i < len; i++) {
              tr += cellWriter(columns[i], record);
            }

            var row_class = "status-"+record.statusCode;
            return '<tr class="'+row_class+'">' + tr + '</tr>';
        },
        _cellWriter: function (column, record) {
            if (column.label == '{{ 'ads.table.actions.actions'|trans }}') {
                column.attributeWriter = function(record) {
                    var html = "";
                    for (index = 0; index < record['links'].length; ++index) {
                        var el = record['links'][index];
                        if (el['rel'] == 'accept' && record['statusCode'] == 0) {
                            html += "<a class='btn btn-xs btn-success action-btn js-accept' href="+el['href']+">{{ 'pushnotifications.table.actions.accept'|trans }}</a>";
                        }
                        if (el['rel'] == 'reject' && record['statusCode'] == 0) {
                            html += "<a class='btn btn-xs btn-danger action-btn js-reject' href="+el['href']+">{{ 'pushnotifications.table.actions.reject'|trans }}</a>";
                        }
                        if (el['rel'] == 'duplicate' && record['statusCode'] == 1) {
                            html += "<a class='btn btn-xs btn-success action-btn js-reject' href="+el['href']+">{{ 'pushnotifications.table.actions.duplicate'|trans }}</a>";
                        }
                    }
                    return html;
                }
            }

            if (column.id == 'userId') {
                column.attributeWriter = function(record) {
                  return "<a href="+record.user.href+">"+record.user.name+"</a>";
                }
            }

            if (column.id == 'createdAt') {
                column.attributeWriter = function(record) {
                    return formatDate(new Date(record.created.date));
                }
            }

            if (column.id == 'publishDate') {
                column.attributeWriter = function(record) {
                    return formatDate(new Date(record.publishDate.date));
                }
            }

            var html = column.attributeWriter(record),
                td = '<td ';

            if (column.hidden || column.textAlign) {
              td += ' style="';
              // keep cells for hidden column headers hidden
              if (column.hidden) {
                td += 'display: none;';
              }
              // keep cells aligned as their column headers are aligned
              if (column.textAlign) {
                td += 'text-align: ' + column.textAlign + ';';
              }
              td += '"';
            }
            if (column.cssClass) {
              td += ' class="' + column.cssClass + '"';
            }

            return td + '>' + html + '</td>';
        }
    }
}).data('dynatable');
</script>

{% endblock %}
